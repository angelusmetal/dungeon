package com.dungeon.game.level.generator;

import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.dungeon.game.level.TileType;
import com.dungeon.game.resource.Resources;
import com.dungeon.game.tileset.WallTileset;

import java.util.function.Function;

public class WallTilesetSolver {
	private final Function<WallTileset, Animation<TextureRegion>>[] animations;
	public WallTilesetSolver() {
		animations = new Function[256];
		animations[0b00000000] = WallTileset::none;
		animations[0b00000001] = WallTileset::cornerB;
		animations[0b00000010] = WallTileset::up;
		animations[0b00000011] = WallTileset::up;
		animations[0b00000100] = WallTileset::cornerC;
		animations[0b00000101] = WallTileset::cornerBC;
		animations[0b00000110] = WallTileset::up;
		animations[0b00000111] = WallTileset::up;
		animations[0b00001000] = WallTileset::left;
		animations[0b00001001] = WallTileset::left;
		animations[0b00001010] = WallTileset::upLeft;
		animations[0b00001011] = WallTileset::upLeft;
		animations[0b00001100] = WallTileset::cornerCLeft;
		animations[0b00001101] = WallTileset::cornerCLeft;
		animations[0b00001110] = WallTileset::upLeft;
		animations[0b00001111] = WallTileset::upLeft;
		animations[0b00010000] = WallTileset::right;
		animations[0b00010001] = WallTileset::cornerBRight;
		animations[0b00010010] = WallTileset::upRight;
		animations[0b00010011] = WallTileset::upRight;
		animations[0b00010100] = WallTileset::right;
		animations[0b00010101] = WallTileset::cornerBRight;
		animations[0b00010110] = WallTileset::upRight;
		animations[0b00010111] = WallTileset::upRight;
		animations[0b00011000] = WallTileset::leftRight;
		animations[0b00011001] = WallTileset::leftRight;
		animations[0b00011010] = WallTileset::upLeftRight;
		animations[0b00011011] = WallTileset::upLeftRight;
		animations[0b00011100] = WallTileset::leftRight;
		animations[0b00011101] = WallTileset::leftRight;
		animations[0b00011110] = WallTileset::upLeftRight;
		animations[0b00011111] = WallTileset::upLeftRight;
		animations[0b00100000] = WallTileset::cornerA;
		animations[0b00100001] = WallTileset::cornerAB;
		animations[0b00100010] = WallTileset::cornerAUp;
		animations[0b00100011] = WallTileset::cornerAUp;
		animations[0b00100100] = WallTileset::cornerAC;
		animations[0b00100101] = WallTileset::cornerABC;
		animations[0b00100110] = WallTileset::cornerAUp;
		animations[0b00100111] = WallTileset::cornerAUp;
		animations[0b00101000] = WallTileset::left;
		animations[0b00101001] = WallTileset::left;
		animations[0b00101010] = WallTileset::upLeft;
		animations[0b00101011] = WallTileset::upLeft;
		animations[0b00101100] = WallTileset::cornerCLeft;
		animations[0b00101101] = WallTileset::cornerCLeft;
		animations[0b00101110] = WallTileset::upLeft;
		animations[0b00101111] = WallTileset::upLeft;
		animations[0b00110000] = WallTileset::cornerARight;
		animations[0b00110001] = WallTileset::cornerABRight;
		animations[0b00110010] = WallTileset::cornerAUpRight;
		animations[0b00110011] = WallTileset::cornerAUpRight;
		animations[0b00110100] = WallTileset::cornerARight;
		animations[0b00110101] = WallTileset::cornerABRight;
		animations[0b00110110] = WallTileset::cornerAUpRight;
		animations[0b00110111] = WallTileset::cornerAUpRight;
		animations[0b00111000] = WallTileset::leftRight;
		animations[0b00111001] = WallTileset::leftRight;
		animations[0b00111010] = WallTileset::upLeftRight;
		animations[0b00111011] = WallTileset::upLeftRight;
		animations[0b00111100] = WallTileset::leftRight;
		animations[0b00111101] = WallTileset::leftRight;
		animations[0b00111110] = WallTileset::upLeftRight;
		animations[0b00111111] = WallTileset::upLeftRight;
		animations[0b01000000] = WallTileset::down;
		animations[0b01000001] = WallTileset::cornerBDown;
		animations[0b01000010] = WallTileset::upDown;
		animations[0b01000011] = WallTileset::upDown;
		animations[0b01000100] = WallTileset::cornerCDown;
		animations[0b01000101] = WallTileset::cornerBCDown;
		animations[0b01000110] = WallTileset::upDown;
		animations[0b01000111] = WallTileset::upDown;
		animations[0b01001000] = WallTileset::downLeft;
		animations[0b01001001] = WallTileset::downLeft;
		animations[0b01001010] = WallTileset::upDownLeft;
		animations[0b01001011] = WallTileset::upDownLeft;
		animations[0b01001100] = WallTileset::cornerCDownLeft;
		animations[0b01001101] = WallTileset::cornerCDownLeft;
		animations[0b01001110] = WallTileset::upDownLeft;
		animations[0b01001111] = WallTileset::upDownLeft;
		animations[0b01010000] = WallTileset::downRight;
		animations[0b01010001] = WallTileset::cornerBDownRight;
		animations[0b01010010] = WallTileset::upDownRight;
		animations[0b01010011] = WallTileset::upDownRight;
		animations[0b01010100] = WallTileset::downRight;
		animations[0b01010101] = WallTileset::cornerBDownRight;
		animations[0b01010110] = WallTileset::upDownRight;
		animations[0b01010111] = WallTileset::upDownRight;
		animations[0b01011000] = WallTileset::downLeftRight;
		animations[0b01011001] = WallTileset::downLeftRight;
		animations[0b01011010] = WallTileset::all;
		animations[0b01011011] = WallTileset::all;
		animations[0b01011100] = WallTileset::downLeftRight;
		animations[0b01011101] = WallTileset::downLeftRight;
		animations[0b01011110] = WallTileset::all;
		animations[0b01011111] = WallTileset::all;
		animations[0b01100000] = WallTileset::down;
		animations[0b01100001] = WallTileset::cornerBDown;
		animations[0b01100010] = WallTileset::upDown;
		animations[0b01100011] = WallTileset::upDown;
		animations[0b01100100] = WallTileset::cornerCDown;
		animations[0b01100101] = WallTileset::cornerBCDown;
		animations[0b01100110] = WallTileset::upDown;
		animations[0b01100111] = WallTileset::upDown;
		animations[0b01101000] = WallTileset::downLeft;
		animations[0b01101001] = WallTileset::downLeft;
		animations[0b01101010] = WallTileset::upDownLeft;
		animations[0b01101011] = WallTileset::upDownLeft;
		animations[0b01101100] = WallTileset::cornerCDownLeft;
		animations[0b01101101] = WallTileset::cornerCDownLeft;
		animations[0b01101110] = WallTileset::upDownLeft;
		animations[0b01101111] = WallTileset::upDownLeft;
		animations[0b01110000] = WallTileset::downRight;
		animations[0b01110001] = WallTileset::cornerBDownRight;
		animations[0b01110010] = WallTileset::upDownRight;
		animations[0b01110011] = WallTileset::upDownRight;
		animations[0b01110100] = WallTileset::downRight;
		animations[0b01110101] = WallTileset::cornerBDownRight;
		animations[0b01110110] = WallTileset::upDownRight;
		animations[0b01110111] = WallTileset::upDownRight;
		animations[0b01111000] = WallTileset::downLeftRight;
		animations[0b01111001] = WallTileset::downLeftRight;
		animations[0b01111010] = WallTileset::all;
		animations[0b01111011] = WallTileset::all;
		animations[0b01111100] = WallTileset::downLeftRight;
		animations[0b01111101] = WallTileset::downLeftRight;
		animations[0b01111110] = WallTileset::all;
		animations[0b01111111] = WallTileset::all;
		animations[0b10000000] = WallTileset::cornerD;
		animations[0b10000001] = WallTileset::cornerBD;
		animations[0b10000010] = WallTileset::cornerDUp;
		animations[0b10000011] = WallTileset::cornerDUp;
		animations[0b10000100] = WallTileset::cornerCD;
		animations[0b10000101] = WallTileset::cornerBCD;
		animations[0b10000110] = WallTileset::cornerDUp;
		animations[0b10000111] = WallTileset::cornerDUp;
		animations[0b10001000] = WallTileset::cornerDLeft;
		animations[0b10001001] = WallTileset::cornerDLeft;
		animations[0b10001010] = WallTileset::cornerDUpLeft;
		animations[0b10001011] = WallTileset::cornerDUpLeft;
		animations[0b10001100] = WallTileset::cornerCDLeft;
		animations[0b10001101] = WallTileset::cornerCDLeft;
		animations[0b10001110] = WallTileset::cornerDUpLeft;
		animations[0b10001111] = WallTileset::cornerDUpLeft;
		animations[0b10010000] = WallTileset::right;
		animations[0b10010001] = WallTileset::cornerBRight;
		animations[0b10010010] = WallTileset::upRight;
		animations[0b10010011] = WallTileset::upRight;
		animations[0b10010100] = WallTileset::right;
		animations[0b10010101] = WallTileset::cornerBRight;
		animations[0b10010110] = WallTileset::upRight;
		animations[0b10010111] = WallTileset::upRight;
		animations[0b10011000] = WallTileset::leftRight;
		animations[0b10011001] = WallTileset::leftRight;
		animations[0b10011010] = WallTileset::upLeftRight;
		animations[0b10011011] = WallTileset::upLeftRight;
		animations[0b10011100] = WallTileset::leftRight;
		animations[0b10011101] = WallTileset::leftRight;
		animations[0b10011110] = WallTileset::upLeftRight;
		animations[0b10011111] = WallTileset::upLeftRight;
		animations[0b10100000] = WallTileset::cornerAD;
		animations[0b10100001] = WallTileset::cornerABD;
		animations[0b10100010] = WallTileset::cornerADUp;
		animations[0b10100011] = WallTileset::cornerADUp;
		animations[0b10100100] = WallTileset::cornerACD;
		animations[0b10100101] = WallTileset::cornerABCD;
		animations[0b10100110] = WallTileset::cornerADUp;
		animations[0b10100111] = WallTileset::cornerADUp;
		animations[0b10101000] = WallTileset::cornerDLeft;
		animations[0b10101001] = WallTileset::cornerDLeft;
		animations[0b10101010] = WallTileset::cornerDUpLeft;
		animations[0b10101011] = WallTileset::cornerDUpLeft;
		animations[0b10101100] = WallTileset::cornerCDLeft;
		animations[0b10101101] = WallTileset::cornerCDLeft;
		animations[0b10101110] = WallTileset::cornerDUpLeft;
		animations[0b10101111] = WallTileset::cornerDUpLeft;
		animations[0b10110000] = WallTileset::cornerARight;
		animations[0b10110001] = WallTileset::cornerABRight;
		animations[0b10110010] = WallTileset::cornerAUpRight;
		animations[0b10110011] = WallTileset::cornerAUpRight;
		animations[0b10110100] = WallTileset::cornerARight;
		animations[0b10110101] = WallTileset::cornerABRight;
		animations[0b10110110] = WallTileset::cornerAUpRight;
		animations[0b10110111] = WallTileset::cornerAUpRight;
		animations[0b10111000] = WallTileset::leftRight;
		animations[0b10111001] = WallTileset::leftRight;
		animations[0b10111010] = WallTileset::upLeftRight;
		animations[0b10111011] = WallTileset::upLeftRight;
		animations[0b10111100] = WallTileset::leftRight;
		animations[0b10111101] = WallTileset::leftRight;
		animations[0b10111110] = WallTileset::upLeftRight;
		animations[0b10111111] = WallTileset::upLeftRight;
		animations[0b11000000] = WallTileset::down;
		animations[0b11000001] = WallTileset::cornerBDown;
		animations[0b11000010] = WallTileset::upDown;
		animations[0b11000011] = WallTileset::upDown;
		animations[0b11000100] = WallTileset::cornerCDown;
		animations[0b11000101] = WallTileset::cornerBCDown;
		animations[0b11000110] = WallTileset::upDown;
		animations[0b11000111] = WallTileset::upDown;
		animations[0b11001000] = WallTileset::downLeft;
		animations[0b11001001] = WallTileset::downLeft;
		animations[0b11001010] = WallTileset::upDownLeft;
		animations[0b11001011] = WallTileset::upDownLeft;
		animations[0b11001100] = WallTileset::cornerCDownLeft;
		animations[0b11001101] = WallTileset::cornerCDownLeft;
		animations[0b11001110] = WallTileset::upDownLeft;
		animations[0b11001111] = WallTileset::upDownLeft;
		animations[0b11010000] = WallTileset::downRight;
		animations[0b11010001] = WallTileset::cornerBDownRight;
		animations[0b11010010] = WallTileset::upDownRight;
		animations[0b11010011] = WallTileset::upDownRight;
		animations[0b11010100] = WallTileset::downRight;
		animations[0b11010101] = WallTileset::cornerBDownRight;
		animations[0b11010110] = WallTileset::upDownRight;
		animations[0b11010111] = WallTileset::upDownRight;
		animations[0b11011000] = WallTileset::downLeftRight;
		animations[0b11011001] = WallTileset::downLeftRight;
		animations[0b11011010] = WallTileset::all;
		animations[0b11011011] = WallTileset::all;
		animations[0b11011100] = WallTileset::downLeftRight;
		animations[0b11011101] = WallTileset::downLeftRight;
		animations[0b11011110] = WallTileset::all;
		animations[0b11011111] = WallTileset::all;
		animations[0b11100000] = WallTileset::down;
		animations[0b11100001] = WallTileset::cornerBDown;
		animations[0b11100010] = WallTileset::upDown;
		animations[0b11100011] = WallTileset::upDown;
		animations[0b11100100] = WallTileset::cornerCDown;
		animations[0b11100101] = WallTileset::cornerBCDown;
		animations[0b11100110] = WallTileset::upDown;
		animations[0b11100111] = WallTileset::upDown;
		animations[0b11101000] = WallTileset::downLeft;
		animations[0b11101001] = WallTileset::downLeft;
		animations[0b11101010] = WallTileset::upDownLeft;
		animations[0b11101011] = WallTileset::upDownLeft;
		animations[0b11101100] = WallTileset::cornerCDownLeft;
		animations[0b11101101] = WallTileset::cornerCDownLeft;
		animations[0b11101110] = WallTileset::upDownLeft;
		animations[0b11101111] = WallTileset::upDownLeft;
		animations[0b11110000] = WallTileset::downRight;
		animations[0b11110001] = WallTileset::cornerBDownRight;
		animations[0b11110010] = WallTileset::upDownRight;
		animations[0b11110011] = WallTileset::upDownRight;
		animations[0b11110100] = WallTileset::downRight;
		animations[0b11110101] = WallTileset::cornerBDownRight;
		animations[0b11110110] = WallTileset::upDownRight;
		animations[0b11110111] = WallTileset::upDownRight;
		animations[0b11111000] = WallTileset::downLeftRight;
		animations[0b11111001] = WallTileset::downLeftRight;
		animations[0b11111010] = WallTileset::all;
		animations[0b11111011] = WallTileset::all;
		animations[0b11111100] = WallTileset::downLeftRight;
		animations[0b11111101] = WallTileset::downLeftRight;
		animations[0b11111110] = WallTileset::all;
		animations[0b11111111] = WallTileset::all;
	}
	public Animation<TextureRegion> getTile(TileType[][] tiles, int x, int y, int width, int height, WallTileset tileset) {
		if (tiles[x][y] == TileType.FLOOR) {
			return Resources.animations.get("invisible");
		}
		int freeUpLeft = y < height - 1 && x > 0 && tiles[x-1][y+1].isFloor() ? 0b00000001 : 0;
		int freeUp = y < height - 1 && tiles[x][y+1].isFloor() ? 0b00000010 : 0;
		int freeUpRight = y < height - 1 && x < width - 1 && tiles[x+1][y+1].isFloor() ? 0b00000100 : 0;
		int freeLeft = x > 0 && tiles[x-1][y].isFloor() ? 0b00001000 : 0;
		int freeRight = x < width - 1 && tiles[x+1][y].isFloor() ? 0b00010000 : 0;
		int freeDownLeft = y > 0 && x > 0 && tiles[x-1][y-1].isFloor() ? 0b00100000 : 0;
		int freeDown = y > 0 && tiles[x][y-1].isFloor() ? 0b01000000 : 0;
		int freeDownRight = y > 0 && x < width - 1 && tiles[x+1][y-1].isFloor() ? 0b10000000 : 0;
		int index = freeUpLeft | freeUp | freeUpRight | freeLeft | freeRight | freeDownLeft | freeDown | freeDownRight;
		return animations[index].apply(tileset);
	}
}
